# benchmark-pr-1p.yml: submit benchmarks to Bencher.
#
# This workflow covers "first party" pull requests specifically,
# i.e. those created from branches within the same repository.

name: Benchmark PRs (first-party)

on:
  pull_request:
    types: [opened, reopened, edited, synchronize]

permissions: {}

concurrency:
  group: "benchmark-pr-1p-${{ github.event.pull_request.number }}"
  cancel-in-progress: true

jobs:
  benchmark-pr-1p:
    name: Continuous Benchmarking PRs with Bencher
    runs-on: ubuntu-latest
    if: >-
      ${{
        github.event_name == 'pull_request'
          && github.event.pull_request.head.repo.full_name == github.repository
          && !contains(github.event.pull_request.labels.*.name, 'no-benchmark')
      }}

    permissions:
      pull-requests: write

    environment:
      name: bencher
      url: https://bencher.dev/console/projects/zizmor

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false

      - name: Set up Bencher
        uses: bencherdev/bencher@d84683bed6747f23f9903a02cd2a70502cee0b8d # v0.5.5

      - name: Installer hyperfine
        run: |
          sudo apt-get remove --purge man-db
          sudo apt install -y hyperfine

      - uses: Swatinem/rust-cache@98c8021b550208e191a6a3145459bfc9fb29c4c0 # v2.8.0

      - uses: astral-sh/setup-uv@b75a909f75acd358c2196fb9a5f1299a9a8868a4 # v6.7.0

      # TODO: use actions/cache to cache the plan phase here.
      - name: Run benchmarks
        run: make bench

      - name: Upload benchmark results
        # Take each result file in bench/results/*.json and use
        # `bencher run` to upload it.
        run: |
          for file in bench/results/*.json; do
            bencher run \
              --project zizmor \
              --token "${BENCHER_API_TOKEN}" \
              --branch "${GITHUB_HEAD_REF}" \
              --start-point "${GITHUB_BASE_REF}" \
              --start-point-hash "${PULL_REQUEST_BASE_SHA}" \
              --start-point-clone-thresholds \
              --start-point-reset \
              --testbed ubuntu-latest \
              --err \
              --adapter shell_hyperfine \
              --github-actions "${GITHUB_TOKEN}" \
              --file "${file}"
          done
        env:
          BENCHER_API_TOKEN: ${{ secrets.BENCHER_API_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PULL_REQUEST_BASE_SHA: ${{ github.event.pull_request.base.sha }}
